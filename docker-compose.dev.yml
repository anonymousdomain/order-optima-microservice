version: "3.8"

services:
  # Postgres database
  postgres:
    image: postgres
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: Kill
      POSTGRES_USER: postgres
      POSTGRES_DB: orderoptima
      PGDATA: /var/lib/postgreql/data
      POSTGRES_HOST_AUTH_METHOD: trust

    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data  
    networks:
      - orderoptima-network

  # Auth service
  api-service:
    build: 
      context: .
      dockerfile: Dockerfile.api
    restart: always
    depends_on:
      - service-discovery 
    ports:
      - "8181:8181" 
    networks:
      - orderoptima-network
  auth-service:
    build: 
      context: .
      dockerfile: Dockerfile.auth
    restart: always
    depends_on:
      - postgres 
      - service-discovery 
    environment:
      POSTGRES_HOST: postgres  
      POSTGRES_USER: your_username
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: your_database_name
    networks:
      - orderoptima-network
  # Service discovery
  service-discovery:
    build: 
      context: .
      dockerfile: Dockerfile.discovery
    restart: always
    ports:
      - "8761:8761" 
    networks:
      - orderoptima-network

  # User service
  user-service:
    build: 
      context: .
      dockerfile: Dockerfile.user
    restart: always
    depends_on:
      - service-discovery  
    # ports:
    #   - "8081:8081"  
    networks:
      - orderoptima-network
  order-service:
    build: 
      context: .
      dockerfile: Dockerfile.order
    restart: always
    depends_on:
      - service-discovery  
    # ports:
    #   - "8082:8082"  
    networks:
      - orderoptima-network    
  inventory-managment:
    build: 
      context: .
      dockerfile: Dockerfile.inventory
    restart: always
    depends_on:
      - service-discovery  
    # ports:
    #   - "8083:8083"  
    networks:
      - orderoptima-network



networks:
  orderoptima-network:
    driver: bridge
volumes:
  postgres-data:
    driver: local
